plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("net.kyori.indra") version "3.1.3"
}

group = 'me.washeremc'
version = '3.5.2'

repositories {
    mavenCentral()
    maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
    maven { name = 'minecraft-repo'; url = 'https://libraries.minecraft.net/' }
    maven { name = "sonatype"; url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = 'https://repo.extendedclip.com/releases/' }
    maven { url = 'https://jitpack.io' }
    maven { name = 'spigotmc-repo'; url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://maven.elmakers.com/repository/' }
}

configurations {
    configureEach {
        resolutionStrategy {
            force 'io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT'
            force 'com.google.code.gson:gson:2.10.1'
        }
    }
    all*.exclude group: 'org.spigotmc', module: 'spigot-api'
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'net.luckperms:api:5.4'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    def scoreboardLibraryVersion = "2.3.0"
    implementation "net.megavex:scoreboard-library-api:$scoreboardLibraryVersion"
    runtimeOnly "net.megavex:scoreboard-library-implementation:$scoreboardLibraryVersion"
    implementation "net.megavex:scoreboard-library-extra-kotlin:$scoreboardLibraryVersion"
    runtimeOnly "net.megavex:scoreboard-library-modern:$scoreboardLibraryVersion"
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += '--enable-preview'
    options.release.set(21)
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}

tasks.withType(Javadoc).configureEach {
    options.addBooleanOption("html5", true)
    options.addStringOption('-release', '21')
    options.addStringOption('--enable-preview', null)
}

tasks.named("runServer", JavaExec) {
    jvmArgs += "--enable-preview"
    minecraftVersion("1.21.5")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
